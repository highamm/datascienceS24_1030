---
title: "Section 2: ggplot2"
author: "Matt Higham"
format: 
  html:
    embed-resources: true
---

## Section 2.3: Intro to Plotting

```{r}
library(tidyverse)
stat113_df <- read_csv("https://raw.githubusercontent.com/highamm/ds234_quarto/main/data_online/stat113.csv")
```

```{r}
## single quantitative
ggplot(data = stat113_df, aes(x = GPA)) +
  geom_histogram(colour = "black", fill = "white",
                 bins = 15)

ggplot(data = stat113_df, aes(x = GPA)) +
  geom_freqpoly(bins = 15)

ggplot(data = stat113_df, aes(x = GPA)) +
  geom_histogram(colour = "black", fill = "white",
                 bins = 15) +
  geom_freqpoly(bins = 15)

ggplot(data = stat113_df, aes(x = TV)) +
  geom_freqpoly(bins = 15)

ggplot(data = stat113_df, aes(x = GPA)) +
  geom_histogram(colour = "khaki4", fill = "lavenderblush",
                 bins = 15)
```

```{r}
## single categorical

ggplot(data = stat113_df, aes(x = Award)) +
  geom_bar(colour = "olivedrab4", fill = "olivedrab1")
```

```{r}
## two categorical
ggplot(data = stat113_df, aes(x = Sport, fill = Award)) +
  geom_bar() 

ggplot(data = stat113_df, aes(x = Sport, fill = Award)) +
  geom_bar(position = "fill") +
  labs(y = "Proportion")

## it's not too surprising that a high proportion of people
## who play a sport prefer to win the olympic medal.
```

```{r}
## categorical and quantitative
## boxplots
ggplot(data = stat113_df, aes(x = Award, y = Exercise)) +
  geom_boxplot()

## violin plots
ggplot(data = stat113_df, aes(x = Award, y = Exercise)) +
  geom_violin()

## strip plot: see a rough sample size!
ggplot(data = stat113_df, aes(x = Award, y = Exercise)) +
  geom_jitter(width = 0.10)

ggplot(data = stat113_df, aes(x = Award, y = Pulse)) +
  geom_violin(colour = "darkolivegreen", fill = "dimgrey")
```

## Section 2.4: Practice Part 1

Class Exercise 1.

```{r}
stat113_df
ggplot(data = stat113_df, aes(x = SocialMedia)) +
  geom_bar()

stat113_restructured <- stat113_df |> group_by(SocialMedia) |>
  summarise(n_social = n())
stat113_restructured

## geom_bar() just counts up the number of times
## social media levels appear in the data frame
ggplot(data = stat113_restructured, aes(x = SocialMedia)) +
  geom_bar()

## geom_col() allows us to specify the counts as an aesthetic
ggplot(data = stat113_restructured, aes(x = SocialMedia,
                                        y = n_social)) +
  geom_col()

```

Class Exercise 2.

```{r}
library(tidyverse)
fitness_full <- read_csv("https://raw.githubusercontent.com/highamm/ds234_quarto/main/data_online/higham_fitness_clean.csv",
                         col_types = list(stepgoal = col_factor())) |>
  mutate(weekend_ind = case_when(weekday == "Sat" | weekday == "Sun" ~ "weekend",
                                 .default = "weekday"))

ggplot(data = fitness_full, aes(x = distance, y = active_cals)) +
  geom_point() +
  geom_smooth()
```

Class Exercise 3.

```{r}
ggplot(data = fitness_full, aes(x = Date, y = steps)) +
  geom_line() +
  geom_smooth()
```

Class Exercise 4.

```{r}
ggplot(data = stat113_df, aes(x = Exercise, y = GPA)) +
  geom_point() +
  facet_grid(Sex ~ Sport)
```

Class Exercise 5.

```{r}
ggplot(data = stat113_df, aes(x = Year,
                              y = TV)) +
  geom_boxplot(outlier.shape = 8)
```

Class Exercise 6. Skip

## Your Turn

Your Turn 1. See handwritten sheet.

Your Turn 2.

```{r}
ggplot(data = stat113_df, aes(x = TV,
                              y = GPA)) +
  geom_point() +
  facet_wrap(~ Year)

ggplot(data = stat113_df, aes(x = TV,
                              y = GPA)) +
  geom_point(aes(colour = Year)) 

## the faceted plot looks better here: in general,
## the more levels there are, the better it is 
## to facet compared to colour
```

Your Turn 3

```{r}
ggplot(data = stat113_df, aes(x = Exercise,
                              y = GPA)) +
  geom_point(aes(colour = Sport))

ggplot(data = stat113_df, aes(x = Exercise,
                              y = GPA)) +
  geom_point()  +
  facet_wrap(~ Sport)

## the coloured version is better: it's more
## easy to compare the levels when there are 
## so few levels (2 here)
```

Your Turn 4.

```{r}
ggplot(data = fitness_full, aes(x = active_cals)) +
  geom_histogram(bins = 15) +
  facet_wrap(~ month)

ggplot(data = fitness_full, aes(x = active_cals)) +
  geom_freqpoly(bins = 15, aes(colour = month))

## faceted histogram is okay, but the coloured
## frequency plot has way too many colours- they
## are indistinguishiable!
```

Your Turn 5. You need exactly one y for each value of x for this to be readable.

```{r}
## this plot is not interpretable since
## there is more than one GPA value per unique
## exercise value
ggplot(data = stat113_df, aes(x = Exercise, y = GPA)) +
  geom_line()
```

Your Turn 6. The message is now clear that these values are just missing (likely these are First-year students who do not have a GPA yet).

Your Turn 7 and 8. Skip

## Section 2.5: Aesthetics

## Section 2.6: Exercises

Class Exercise 1.

```{r}
stat113_df <- read_csv("https://raw.githubusercontent.com/highamm/ds234_quarto/main/data_online/stat113.csv")

ggplot(data = stat113_df, aes(x = Wgt, y = Hgt)) +
  geom_point(aes(colour = Sport)) +
  geom_smooth()
## the plot has a single smoother now because
## I have now specified Sport as a local colour aestehetic
## that only applies to geom_point().
```

Class Exercise 2.

```{r}
ggplot(data = stat113_df, aes(x = TV)) +
  geom_histogram(colour = "black", fill = "white")
```

Your Turn 1. 

a is wrong because method = "lm" should not be an aesthetic (lm is not a variable in our data frame).

b. is correct: the global colour = groupvar aestehtic will be overridden by the local colour = "purple" argument in geom_point().

c. c is wrong because purple is not an aesthetic but groupvar should be an aesthetic.

d. d is wrong because colour = groupvar needs to go inside aes().

e. e is correct!

f. f is wrong: purple should not be inside aes().

Your Turn 2.

Transition (e) to be all local aesthetics.

```{r}
#| eval: false
ggplot(data = toy_df) +
  geom_point(colour = "purple", aes(x = xvar, y = yvar)) +
  geom_smooth(method = "lm", aes(x = xvar, y = yvar, colour = groupvar))
```